<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.0.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <bean id="userService" class="aop.e_xml.UserServiceImpl"></bean>
    <!--声明切面类，但是此时该类没有灵魂-->
    <bean id="security" class="aop.e_xml.a_before.Security"></bean>

    <!--声明切面，无论是关联切面还是切入点，都要放到aop:conf-->
    <aop:config>
        <!--对声明的切面注入灵魂-->
        <aop:aspect id="security1" ref="security">
            <!--
            声明切入点，对目标对象中的某些方法进行拦截，此时叫做切入点
            指定切入点是UserServiceImpl类中的saveUser方法，该方法时切入点
            注意：只有通知在切入点的范围之类，那么才能对目标对象的方法进行拦截，否则不能被拦截
         -->
            <aop:pointcut id="save" expression="execution(* aop.e_xml.UserServiceImpl.saveUser(..))"></aop:pointcut>
            <aop:pointcut id="update" expression="execution(* aop.e_xml.UserServiceImpl.updateUser(..))"></aop:pointcut>
            <!--切入点关联通知
                前置通知：前置通知在访问目标方法之前，先要执行通知
                * pointcut-ref:注入切入点的名称
	    		* method：通知的方法
            -->
            <aop:before pointcut-ref="save" method="checkSecurity"/>
        </aop:aspect>
    </aop:config>
</beans>